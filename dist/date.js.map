{"version":3,"file":"date.js","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7c7a2b4041c4bf4b9c59","webpack:///./src/date.js","webpack:///./src/i18n.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"jquery\"), require(\"angular\"), require(\"jquery-ui/datepicker\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"jquery\", \"angular\", \"jquery-ui/datepicker\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularUiDate\"] = factory(require(\"jquery\"), require(\"angular\"), require(\"jquery-ui/datepicker\"));\n\telse\n\t\troot[\"angularUiDate\"] = factory(root[\"jQuery\"], root[\"angular\"], root[\"jquery-ui/datepicker\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7c7a2b4041c4bf4b9c59\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _datepicker = require('jquery-ui/datepicker');\n\nvar _datepicker2 = _interopRequireDefault(_datepicker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// sets up jQuery with the datepicker plugin\nrequire('./i18n');\n\nexports.default = _angular2.default.module('ui.date', []).constant('uiDateConfig', {}).constant('uiDateFormatConfig', '').factory('uiDateConverter', ['uiDateFormatConfig', function (uiDateFormatConfig) {\n  return {\n    stringToDate: stringToDate,\n    dateToString: dateToString\n  };\n\n  function dateToString(uiDateFormat, value) {\n    var dateFormat = uiDateFormat || uiDateFormatConfig;\n    if (value) {\n      if (dateFormat) {\n        try {\n          return _jquery2.default.datepicker.formatDate(dateFormat, value);\n        } catch (formatException) {\n          return undefined;\n        }\n      }\n\n      if (value.toISOString) {\n        return value.toISOString();\n      }\n    }\n    return null;\n  }\n\n  function stringToDate(dateFormat, valueToParse) {\n    dateFormat = dateFormat || uiDateFormatConfig;\n\n    if (_angular2.default.isDate(valueToParse) && !isNaN(valueToParse)) {\n      return valueToParse;\n    }\n\n    if (_angular2.default.isString(valueToParse)) {\n      if (dateFormat) {\n        return _jquery2.default.datepicker.parseDate(dateFormat, valueToParse);\n      }\n\n      var isoDate = new Date(valueToParse);\n      return isNaN(isoDate.getTime()) ? null : isoDate;\n    }\n\n    if (_angular2.default.isNumber(valueToParse)) {\n      // presumably timestamp to date object\n      return new Date(valueToParse);\n    }\n\n    return null;\n  }\n}]).directive('uiDate', ['uiDateConfig', 'uiDateConverter', function uiDateDirective(uiDateConfig, uiDateConverter) {\n\n  return {\n    require: '?ngModel',\n    scope: {\n      'uiDateLang': '=?',\n      'uiDate': '='\n    },\n    link: function link(scope, element, attrs, controller) {\n\n      var $element = (0, _jquery2.default)(element);\n\n      var getOptions = function getOptions() {\n        return _angular2.default.extend({}, uiDateConfig, scope.uiDate);\n      };\n      var initDateWidget = function initDateWidget() {\n        var showing = false;\n        var opts = getOptions();\n\n        function setVal(forcedUpdate) {\n          var keys = ['Hours', 'Minutes', 'Seconds', 'Milliseconds'];\n          var isDate = _angular2.default.isDate(controller.$modelValue);\n          var preserve = {};\n\n          if (!forcedUpdate && isDate && controller.$modelValue.toDateString() === $element.datepicker('getDate').toDateString()) {\n            return;\n          }\n\n          if (isDate) {\n            _angular2.default.forEach(keys, function (key) {\n              preserve[key] = controller.$modelValue['get' + key]();\n            });\n          }\n\n          var newViewValue = $element.datepicker('getDate');\n\n          if (isDate) {\n            _angular2.default.forEach(keys, function (key) {\n              newViewValue['set' + key](preserve[key]);\n            });\n          }\n\n          controller.$setViewValue(newViewValue);\n        }\n\n        // If we have a controller (i.e. ngModelController) then wire it up\n        if (controller) {\n          // Set the view value in a $apply block when users selects\n          // (calling directive user's function too if provided)\n          var _onSelect = opts.onSelect || _angular2.default.noop;\n          opts.onSelect = function (value, picker) {\n            scope.$apply(function () {\n              showing = true;\n              setVal();\n              $element.blur();\n              _onSelect(value, picker, $element);\n            });\n          };\n\n          var _beforeShow = opts.beforeShow || _angular2.default.noop;\n          opts.beforeShow = function (input, picker) {\n            showing = true;\n            _beforeShow(input, picker, $element);\n          };\n\n          var _onClose = opts.onClose || _angular2.default.noop;\n          opts.onClose = function (value, picker) {\n            showing = false;\n            _onClose(value, picker, $element);\n          };\n\n          element.on('focus', function (focusEvent) {\n            if (attrs.readonly) {\n              focusEvent.stopImmediatePropagation();\n            }\n          });\n\n          $element.off('blur.datepicker').on('blur.datepicker', function () {\n            if (!showing) {\n              scope.$apply(function () {\n                $element.datepicker('setDate', $element.datepicker('getDate'));\n                setVal();\n              });\n            }\n          });\n\n          controller.$validators.uiDateValidator = function uiDateValidator(modelValue, viewValue) {\n            return viewValue === null || viewValue === '' || _angular2.default.isDate(uiDateConverter.stringToDate(attrs.uiDateFormat, viewValue));\n          };\n\n          controller.$parsers.push(function uiDateParser(valueToParse) {\n            return uiDateConverter.stringToDate(attrs.uiDateFormat, valueToParse);\n          });\n\n          // Update the date picker when the model changes\n          controller.$render = function () {\n            // Force a render to override whatever is in the input text box\n            if (_angular2.default.isDate(controller.$modelValue) === false && _angular2.default.isString(controller.$modelValue)) {\n              controller.$modelValue = uiDateConverter.stringToDate(attrs.uiDateFormat, controller.$modelValue);\n            }\n            $element.datepicker('setDate', controller.$modelValue);\n          };\n        }\n        // Check if the $element already has a datepicker.\n        //\n\n        if ($element.data('datepicker')) {\n          // Updates the datepicker options\n          $element.datepicker('option', opts);\n          $element.datepicker('refresh');\n        } else {\n          // Creates the new datepicker widget\n          $element.datepicker(opts);\n\n          // Cleanup on destroy, prevent memory leaking\n          $element.on('$destroy', function () {\n            $element.datepicker('hide');\n            $element.datepicker('destroy');\n          });\n        }\n\n        if (controller) {\n          controller.$render();\n          // Update the model with the value from the datepicker after parsed\n          setVal(true);\n        }\n      };\n\n      // Watch for changes to the directives options\n      scope.$watch(getOptions, initDateWidget, true);\n\n      //Add language support\n      scope.$watch(getLang, updateLanguage, true);\n\n      function getLang() {\n        return scope.uiDateLang;\n      }\n\n      //Update the datepicker language if lang attribute specified\n      function updateLanguage() {\n        if (scope.uiDateLang) {\n          var lang = scope.uiDateLang;\n          (0, _jquery2.default)($element).datepicker('option', _jquery2.default.datepicker.regional[lang]);\n        }\n      }\n    }\n  };\n}]).directive('uiDateFormat', ['uiDateConverter', function (uiDateConverter) {\n  return {\n    require: 'ngModel',\n    link: function link(scope, element, attrs, modelCtrl) {\n      var dateFormat = attrs.uiDateFormat;\n\n      // Use the datepicker with the attribute value as the dateFormat string to convert to and from a string\n      modelCtrl.$formatters.unshift(function (value) {\n        return uiDateConverter.stringToDate(dateFormat, value);\n      });\n\n      modelCtrl.$parsers.push(function (value) {\n        return uiDateConverter.dateToString(dateFormat, value);\n      });\n    }\n  };\n}]);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/date.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nvar _jquery = require('jquery');\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* French initialisation for the jQuery UI date picker plugin. */\n/* Written by Keith Wood (kbwood{at}iinet.com.au),\r\n\t\t\t  Stéphane Nahmani (sholby@sholby.net),\r\n\t\t\t  Stéphane Raimbault <stephane.raimbault@gmail.com> */\n(function (datepicker) {\n\n    datepicker.regional.fr = {\n        closeText: 'Fermer',\n        prevText: 'Précédent',\n        nextText: 'Suivant',\n        currentText: 'Aujourd\\'hui',\n        monthNames: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'],\n        monthNamesShort: ['janv.', 'févr.', 'mars', 'avr.', 'mai', 'juin', 'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],\n        dayNames: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'],\n        dayNamesShort: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],\n        dayNamesMin: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],\n        weekHeader: 'Sem.',\n        dateFormat: 'dd/mm/yy',\n        firstDay: 1,\n        isRTL: false,\n        showMonthAfterYear: false,\n        yearSuffix: ''\n    };\n    //datepicker.setDefaults( datepicker.regional.fr );\n\n    return datepicker.regional.fr;\n})(_jquery2.default.datepicker);\n\n/* Dutch (Belgium) initialisation for the jQuery UI date picker plugin. */\n/* David De Sloovere @DavidDeSloovere */\n(function (datepicker) {\n\n    datepicker.regional.nl = {\n        closeText: 'Sluiten',\n        prevText: '←',\n        nextText: '→',\n        currentText: 'Vandaag',\n        monthNames: ['januari', 'februari', 'maart', 'april', 'mei', 'juni', 'juli', 'augustus', 'september', 'oktober', 'november', 'december'],\n        monthNamesShort: ['jan', 'feb', 'mrt', 'apr', 'mei', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'dec'],\n        dayNames: ['zondag', 'maandag', 'dinsdag', 'woensdag', 'donderdag', 'vrijdag', 'zaterdag'],\n        dayNamesShort: ['zon', 'maa', 'din', 'woe', 'don', 'vri', 'zat'],\n        dayNamesMin: ['zo', 'ma', 'di', 'wo', 'do', 'vr', 'za'],\n        weekHeader: 'Wk',\n        dateFormat: 'dd/mm/yy',\n        firstDay: 1,\n        isRTL: false,\n        showMonthAfterYear: false,\n        yearSuffix: ''\n    };\n    //datepicker.setDefaults( datepicker.regional.nl );\n\n    return datepicker.regional.nl;\n})(_jquery2.default.datepicker);\n\n/* English/UK initialisation for the jQuery UI date picker plugin. */\n/* Written by Stuart. */\n(function (datepicker) {\n\n    datepicker.regional.en = {\n        closeText: 'Done',\n        prevText: 'Prev',\n        nextText: 'Next',\n        currentText: 'Today',\n        monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n        weekHeader: 'Wk',\n        dateFormat: 'dd/mm/yy',\n        firstDay: 1,\n        isRTL: false,\n        showMonthAfterYear: false,\n        yearSuffix: '' };\n    //datepicker.setDefaults( datepicker.regional.en );\n\n    return datepicker.regional.en;\n})(_jquery2.default.datepicker);\n\n(function (datepicker) {\n\n    datepicker.setLanguage = function (lang) {\n        datepicker.setDefaults(datepicker.regional[lang]);\n    };\n})(_jquery2.default.datepicker);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/i18n.js\n ** module id = 4\n ** module chunks = 0\n **/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtzOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;","sourceRoot":""}